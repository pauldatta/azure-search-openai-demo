# Build the js in a separate image
FROM node:14.17.6-alpine as builder
WORKDIR /app/frontend
COPY app/frontend /app/frontend
RUN npm install && npm run build

# Use a smaller Python image as the runtime environment
FROM python:3.9.7-slim-buster

# Backend Build
WORKDIR /app
COPY app/backend /app
COPY app/backend/requirements.txt /app
RUN pip install -r requirements.txt

# Install the Azure CLI
RUN apt-get update && \
    apt-get install -y curl gnupg && \
    curl -sL https://aka.ms/InstallAzureCLIDeb | bash


# Set environment variables for the Azure CLI
ENV AZURE_ENV_NAME= \
    AZURE_LOCATION= \
    AZURE_OPENAI_CHATGPT_DEPLOYMENT= \
    AZURE_OPENAI_GPT_DEPLOYMENT= \
    AZURE_OPENAI_RESOURCE_GROUP= \
    AZURE_OPENAI_SERVICE= \
    AZURE_SEARCH_INDEX= \
    AZURE_SEARCH_SERVICE= \
    AZURE_STORAGE_ACCOUNT= \
    AZURE_STORAGE_CONTAINER=content \
    AZURE_STORAGE_CONNECTION_STRING= \
    AZURE_OPENAI_API_KEY= \
    AZURE_SEARCH_API_KEY= \
    FLASK_APP=app.py \
    FLASK_RUN_HOST=0.0.0.0

# Set the host to 0.0.0.0 so that Flask can receive requests from any IP address
ENV FLASK_RUN_HOST=0.0.0.0

# Install PowerShell
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-buster-prod buster main" > /etc/apt/sources.list.d/microsoft.list && \
    apt-get update && \
    apt-get install -y powershell

# Copy the built frontend assets
COPY --from=builder /app/frontend/node_modules /app/static

# Port
EXPOSE 5000

# Start the Flask app
CMD flask run -h 0.0.0.0 -p 5000